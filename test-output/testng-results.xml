<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="4" passed="3">
  <reporter-output>
  </reporter-output>
  <suite name="ExpediaFlightTestSuite" duration-ms="46884" started-at="2016-04-03T19:27:34Z" finished-at="2016-04-03T19:28:21Z">
    <groups>
    </groups>
    <test name="ExpediaFlightBookingTests" duration-ms="46884" started-at="2016-04-03T19:27:34Z" finished-at="2016-04-03T19:28:21Z">
      <class name="TestCases.selectFlights">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:TestCases.selectFlights@17f6480]" name="beforeClass" is-config="true" duration-ms="9954" started-at="2016-04-03T20:27:34Z" finished-at="2016-04-03T20:27:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="beforeMethod" is-config="true" duration-ms="10" started-at="2016-04-03T20:27:44Z" finished-at="2016-04-03T20:27:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="simpleFlightTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.selectFlights@17f6480]" name="simpleFlightTest" duration-ms="13249" started-at="2016-04-03T20:27:44Z" data-provider="searchFlightsData" finished-at="2016-04-03T20:27:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[London]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01/05/2016]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[06/05/2016]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at page.classes.ExpediaHomePageFactory.simpleFlight(ExpediaHomePageFactory.java:124)
	at TestCases.selectFlights.simpleFlightTest(selectFlights.java:60)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1191)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1116)
	at org.testng.TestNG.run(TestNG.java:1024)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:112)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:205)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:176)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleFlightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="afterMethod" is-config="true" duration-ms="3571" started-at="2016-04-03T20:27:58Z" finished-at="2016-04-03T20:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="beforeMethod" is-config="true" duration-ms="218" started-at="2016-04-03T20:28:01Z" finished-at="2016-04-03T20:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="simpleFlightTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.selectFlights@17f6480]" name="simpleFlightTest" duration-ms="4679" started-at="2016-04-03T20:28:01Z" data-provider="searchFlightsData" finished-at="2016-04-03T20:28:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Madrid]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Glasgow]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01/06/2016]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[07/06/2016]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleFlightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="afterMethod" is-config="true" duration-ms="3173" started-at="2016-04-03T20:28:06Z" finished-at="2016-04-03T20:28:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="beforeMethod" is-config="true" duration-ms="212" started-at="2016-04-03T20:28:09Z" finished-at="2016-04-03T20:28:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="simpleFlightTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:TestCases.selectFlights@17f6480]" name="simpleFlightTest" duration-ms="5411" started-at="2016-04-03T20:28:09Z" data-provider="searchFlightsData" finished-at="2016-04-03T20:28:15Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Paris]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Chicago]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[01/07/2016]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[08/07/2016]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[4]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- simpleFlightTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="afterMethod" is-config="true" duration-ms="3017" started-at="2016-04-03T20:28:15Z" finished-at="2016-04-03T20:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="beforeMethod" is-config="true" duration-ms="209" started-at="2016-04-03T20:28:18Z" finished-at="2016-04-03T20:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="secondTestMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="secondTestMethod" duration-ms="0" started-at="2016-04-03T20:28:18Z" finished-at="2016-04-03T20:28:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- secondTestMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:TestCases.selectFlights@17f6480]" name="afterMethod" is-config="true" duration-ms="3165" started-at="2016-04-03T20:28:18Z" finished-at="2016-04-03T20:28:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- TestCases.selectFlights -->
    </test> <!-- ExpediaFlightBookingTests -->
  </suite> <!-- ExpediaFlightTestSuite -->
</testng-results>
